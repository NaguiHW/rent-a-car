[{"/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/index.js":"1","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/App/index.jsx":"2","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/Home/index.jsx":"3","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/CarCard/index.jsx":"4","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/NavBar/index.jsx":"5","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/SignIn/index.jsx":"6","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/Login/index.jsx":"7","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/ManageCars/index.jsx":"8","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/Car/index.jsx":"9","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/Reservation/index.jsx":"10","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/MyReservations/index.jsx":"11"},{"size":232,"mtime":1608329449256,"results":"12","hashOfConfig":"13"},{"size":2355,"mtime":1608484606407,"results":"14","hashOfConfig":"13"},{"size":1681,"mtime":1608484606408,"results":"15","hashOfConfig":"13"},{"size":781,"mtime":1608373112501,"results":"16","hashOfConfig":"13"},{"size":1474,"mtime":1608484606408,"results":"17","hashOfConfig":"13"},{"size":2412,"mtime":1608484606407,"results":"18","hashOfConfig":"13"},{"size":1482,"mtime":1608484606407,"results":"19","hashOfConfig":"13"},{"size":7846,"mtime":1608484606407,"results":"20","hashOfConfig":"13"},{"size":1583,"mtime":1608484606408,"results":"21","hashOfConfig":"13"},{"size":2650,"mtime":1608484606407,"results":"22","hashOfConfig":"13"},{"size":1531,"mtime":1608485142054,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yzfw9o",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/index.js",[],"/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/App/index.jsx",[],"/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/Home/index.jsx",[],["50","51"],"/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/CarCard/index.jsx",[],"/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/NavBar/index.jsx",[],"/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/SignIn/index.jsx",[],"/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/Login/index.jsx",[],"/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/ManageCars/index.jsx",["52"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './style.scss';\n\nconst carTypes = ['SUV', 'Truck', 'Sedan', 'Van', 'Luxury Car', 'Sports Car'];\nconst transmission = ['Auto', 'Manual'];\n\nconst ManageCars = () => {\n  const [formData, setFormData] = useState({\n    model: '',\n    carType: carTypes[0],\n    price: '',\n    year: '',\n    horsePower: '',\n    seats: '',\n    doors: '',\n    transmission: transmission[0],\n    quantity: '',\n    image1: '',\n    image2: '',\n    image3: '',\n    image4: '',\n    image5: '',\n  });\n\n  const [showCars, setShowCars] = useState([]);\n\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    })\n    console.log(formData);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const { image1, image2, image3, image4, image5 } = formData;\n    if (image1.length > 0) {\n      try {\n        const { model, carType, price, year, horsePower, seats, doors, transmission, quantity } = formData;\n        const car = {\n          model,\n          carType,\n          price,\n          year,\n          horsePower,\n          seats,\n          doors,\n          transmission,\n          quantity,\n          image1,\n          image2,\n          image3,\n          image4,\n          image5,\n        }\n        const res = await axios.post('http://localhost:8000/cars', car, { withCredentials: true })\n          .then(res => {\n            setFormData({\n              model: '',\n              carType: carTypes[0],\n              price: '',\n              year: '',\n              horsePower: '',\n              seats: '',\n              doors: '',\n              transmission: transmission[0],\n              quantity: '',\n              image1: '',\n              image2: '',\n              image3: '',\n              image4: '',\n              image5: '',\n            })\n            loadCars();\n          }).catch(err => {\n            console.error(err);\n          })\n      } catch (err) {\n\n      }\n    } else {\n      alert('You have to select at least 1 image.')\n    }\n  };\n\n  const loadCars = () => {\n    axios.get('http://localhost:8000/cars', { withCredentials: true })\n      .then(res => {\n        setShowCars(res.data.cars);\n      }).catch(err => {\n        console.error(err);\n      })\n  };\n\n  const deleteCar = id => {\n    axios.delete(`http://localhost:8000/cars/${id}`, { withCredentials: true })\n      .then(res => {\n        loadCars();\n        console.log(res);\n      }).catch(err => {\n        console.error(err);\n      })\n  };\n\n  useEffect(() => {\n    loadCars();\n  }, []);\n\n  return (\n    <div className=\"manage-cars\">\n      <div className=\"new-car\">\n        <h3>Add new car</h3>\n        <form className=\"new-car\" onSubmit={handleSubmit}>\n          <div className=\"form-info\">\n            <label htmlFor=\"model\">\n              Model:\n              <br />\n              <input type=\"text\" name=\"model\" id=\"model\" onChange={handleChange} required autoComplete=\"off\" value={formData.model} />\n            </label>\n            <label htmlFor=\"car-types\">\n              Car Type:\n              <br />\n              <select name=\"carType\" id=\"car-types\" onChange={handleChange} value={formData.carType} >\n                {\n                  carTypes.map(type => (\n                    <option value={type} key={type}>{type}</option>\n                  ))\n                }\n              </select>\n            </label>\n            <label htmlFor=\"price\">\n              Price per day:\n              <br />\n              <input type=\"number\" name=\"price\" id=\"price\" onChange={handleChange} required autoComplete=\"off\" min=\"0\" step=\"0.01\" value={formData.price}  />\n            </label>\n            <label htmlFor=\"year\">\n              Year:\n              <br />\n              <input type=\"number\" name=\"year\" id=\"year\" onChange={handleChange} required autoComplete=\"off\" min=\"2000\" max=\"2021\" step=\"1\" value={formData.year}  />\n            </label>\n            <label htmlFor=\"horsePower\">\n              Horse Power:\n              <br />\n              <input type=\"number\" name=\"horsePower\" id=\"horsePower\" onChange={handleChange} required autoComplete=\"off\" min=\"100\" max=\"320\" step=\"1\" value={formData.horsePower}  />\n            </label>\n            <label htmlFor=\"seats\">\n              Seats:\n              <br />\n              <input type=\"number\" name=\"seats\" id=\"seats\" onChange={handleChange} required autoComplete=\"off\" min=\"2\" max=\"12\" step=\"1\" value={formData.seats}  />\n            </label>\n            <label htmlFor=\"doors\">\n              Doors:\n              <br />\n              <input type=\"number\" name=\"doors\" id=\"doors\" onChange={handleChange} required autoComplete=\"off\" min=\"2\" max=\"6\" step=\"1\" value={formData.doors}  />\n            </label>\n            <label htmlFor=\"transmission\">\n              Transmission:\n              <br />\n              <select name=\"transmission\" id=\"transmission\" onChange={handleChange} value={formData.transmission} >\n                {\n                  transmission.map(type => (\n                    <option value={type} key={type}>{type}</option>\n                  ))\n                }\n              </select>\n            </label>\n            <label htmlFor=\"quantity\">\n              Quantity:\n              <br />\n              <input type=\"number\" name=\"quantity\" id=\"quantity\" onChange={handleChange} required autoComplete=\"off\" min=\"1\" step=\"1\" value={formData.quantity}  />\n            </label>\n          </div>\n          <p>You can put up to 5 images links.</p>\n          <div className=\"uploaded-images\">\n            <input type=\"text\" name=\"image1\" onChange={handleChange} value={formData.image1} required autoComplete=\"off\" />\n            <input type=\"text\" name=\"image2\" onChange={handleChange} value={formData.image2} autoComplete=\"off\" />\n            <input type=\"text\" name=\"image3\" onChange={handleChange} value={formData.image3} autoComplete=\"off\" />\n            <input type=\"text\" name=\"image4\" onChange={handleChange} value={formData.image4} autoComplete=\"off\" />\n            <input type=\"text\" name=\"image5\" onChange={handleChange} value={formData.image5} autoComplete=\"off\" />\n          </div>\n          <button type=\"submit\">Create</button>\n        </form>\n      </div>\n      <div className=\"all-cars\">\n        {\n          showCars.map(car => (\n            <div className=\"car-container\" key={car.id}>\n              <div className=\"left\">\n                <h1>{car.model}</h1>\n                <div className=\"img-container\">\n                  <img src={car.image1} alt={car.model} />\n                </div>\n              </div>\n              <div className=\"center\">\n                <div className=\"item\">\n                  <h3>Type: {car.carType}</h3>\n                </div>\n                <div className=\"item\">\n                  <h3>Price per day: ${car.price}.00</h3>\n                </div>\n                <div className=\"item\">\n                  <h3>Year: {car.year}</h3>\n                </div>\n                <div className=\"item\">\n                  <h3>Horse Power: {car.horsePower}</h3>\n                </div>\n                <div className=\"item\">\n                  <h3>Seats: {car.seats}</h3>\n                </div>\n                <div className=\"item\">\n                  <h3>Doors: {car.doors}</h3>\n                </div>\n                <div className=\"item\">\n                  <h3>Transmission: {car.transmission}</h3>\n                </div>\n                <div className=\"item\">\n                  <h3>Quantity: {car.quantity}</h3>\n                </div>\n              </div>\n              <div className=\"right\">\n                <button type=\"button\" onClick={() => deleteCar(car.id)}>Delete</button>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default ManageCars;\n","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/Car/index.jsx",["53"],"import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './style.scss';\n\nconst Car = () => {\n  const [car, setCar] = useState({})\n  const { id } = useParams();\n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/cars/${id}`, { withCredentials: true })\n      .then(res => {\n        setCar(res.data.car[0]);\n      }).catch(err => {\n        console.error(err);\n      })\n  }, [])\n\n  return (\n    <div className=\"car\">\n      <div className=\"car-container\" key={car.id}>\n        <div className=\"left\">\n          <h1>{car.model}</h1>\n          <div className=\"img-container\">\n            <img src={car.image1} alt={car.model} />\n          </div>\n        </div>\n        <div className=\"right\">\n          <div className=\"item\">\n            <h3>Type: {car.carType}</h3>\n          </div>\n          <div className=\"item\">\n            <h3>Price per day: ${car.price}.00</h3>\n          </div>\n          <div className=\"item\">\n            <h3>Year: {car.year}</h3>\n          </div>\n          <div className=\"item\">\n            <h3>Horse Power: {car.horsePower}</h3>\n          </div>\n          <div className=\"item\">\n            <h3>Seats: {car.seats}</h3>\n          </div>\n          <div className=\"item\">\n            <h3>Doors: {car.doors}</h3>\n          </div>\n          <div className=\"item\">\n            <h3>Transmission: {car.transmission}</h3>\n          </div>\n        </div>\n      </div>\n      <Link to={`/reservation/${car.id}`}>Make a reservation</Link>\n    </div>\n  );\n};\n\nexport default Car;\n","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/Reservation/index.jsx",["54","55"],"import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport './style.scss';\n\nconst Reservation = () => {\n  const { id } = useParams();\n  const [car, setCar] = useState({})\n  const [reservation, setReservation] = useState({\n    user_id: 0,\n    car_id: id,\n    startDate: '',\n    endDate: '',\n    total: 0,\n  })\n\n  const handleChange = e => {\n    setReservation({\n      ...reservation,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('http://localhost:8000/reservations', { reservation }, { withCredentials: true })\n      .then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.error(err);\n      });\n    console.log(reservation);\n  }\n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/cars/${id}`, { withCredentials: true })\n      .then(res => {\n        setCar(res.data.car[0]);\n      }).catch(err => {\n        console.error(err);\n      });\n    axios.get('http://localhost:8000/logged_in', { withCredentials: true })\n      .then(res => {\n        if (res.data.user) {\n          setReservation({\n            ...reservation,\n            user_id: res.data.user.id,\n          });\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n  }, []);\n\n  useEffect(() => {\n    const {startDate, endDate} = reservation;\n    if (startDate !== '' && endDate !== '') {\n      const endD = new Date(endDate);\n      const startD = new Date(startDate);\n      const ms = Math.abs(endD - startD);\n      const diff = new moment.duration(ms);\n      const total = car.price * diff.asDays();\n      setReservation({\n        ...reservation,\n        total,\n      })\n    }\n  }, [reservation.startDate, reservation.endDate])\n\n  return (\n    <div className=\"reservation\">\n      <h2>Make a reservation</h2>\n      <div className=\"img-container\">\n        <img src={car.image1} alt={car.model}/>\n      </div>\n      <h3>{car.model}</h3>\n      <h3>Price per day: ${car.price}.00</h3>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"startDate\">\n          Start date:<br />\n          <input type=\"date\" name=\"startDate\" id=\"startDate\" onChange={handleChange} required />\n        </label>\n        <label htmlFor=\"endDate\">\n          End date:<br />\n          <input type=\"date\" name=\"endDate\" id=\"endDate\" onChange={handleChange} required />\n        </label>\n        <h3>Total to pay: ${reservation.total}.00</h3>\n        <button type=\"submit\">Make Reservation</button>\n      </form>\n    </div>\n  )\n};\n\nexport default Reservation;\n","/Users/NaguiHW/Desktop/myProjects/rent-a-car/src/components/MyReservations/index.jsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":58,"column":15,"nodeType":"62","messageId":"63","endLine":58,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":17,"column":6,"nodeType":"66","endLine":17,"endColumn":8,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":54,"column":6,"nodeType":"66","endLine":54,"endColumn":8,"suggestions":"69"},{"ruleId":"64","severity":1,"message":"70","line":69,"column":6,"nodeType":"66","endLine":69,"endColumn":50,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["74"],"React Hook useEffect has missing dependencies: 'id' and 'reservation'. Either include them or remove the dependency array. You can also do a functional update 'setReservation(r => ...)' if you only need 'reservation' in the 'setReservation' call.",["75"],"React Hook useEffect has missing dependencies: 'car.price' and 'reservation'. Either include them or remove the dependency array. You can also do a functional update 'setReservation(r => ...)' if you only need 'reservation' in the 'setReservation' call.",["76"],"no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [id]",{"range":"83","text":"84"},"Update the dependencies array to be: [id, reservation]",{"range":"85","text":"86"},"Update the dependencies array to be: [reservation.startDate, reservation.endDate, reservation, car.price]",{"range":"87","text":"88"},[467,469],"[id]",[1382,1384],"[id, reservation]",[1795,1839],"[reservation.startDate, reservation.endDate, reservation, car.price]"]